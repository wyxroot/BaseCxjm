<configuration>
    <property name="PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread][%X{requestId}] %-5p %c{16}:%line -%m%n"/>
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([%t][%X{requestId}]){faint} %clr(%c{16}:%line){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <include resource="org/springframework/boot/logging/logback/defaults.xml" />

    <jmxConfigurator/>
    <springProperty scope="context" name="proLogLevel" source="pro.logging.level"/>
    <springProperty scope="context" name="devLogLevel" source="dev.logging.level"/>

    <turboFilter class="com.foresee.ftcsp.common.core.log.ThrowableFilter">
        <Marker>throwable</Marker>
    </turboFilter>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <appender name="wechatMsg"
              class="com.foresee.ftcsp.ftcspmvc.alert.WechatMsgAppender">
        <encoder charset="UTF-8">
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="_fileLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.rootPath}/logs/demoServer.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${log.rootPath}/logs/demoServer.%d{yyyy-MM-dd}.log.gz
            </fileNamePattern>
            <maxHistory>365</maxHistory>
        </rollingPolicy>
        <encoder charset="UTF-8">
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name ="fileLog" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="_fileLog"/>
    </appender>

    <!--  测试环境+开发环境. 多个使用逗号隔开.  -->
    <springProfile name="test,dev">
        <logger name="com.foresee.ftcsp" level="${devLogLevel}"/>
        <logger name="com.ibatis" level="${devLogLevel}"/>
        <logger name="java.sql" level="${devLogLevel}"/>
        <logger name="java.sql.Connection" level="${devLogLevel}"/>
        <logger name="java.sql.Statement" level="${devLogLevel}"/>
        <logger name="java.sql.PreparedStatement" level="${devLogLevel}"/>
        <!--  根logger的设置  -->
        <root>
            <level value="INFO"/>
            <!--
             logback建议只使用FATAL ,ERROR ,WARN ,INFO
                            ,DEBUG这五个级别。
            -->
            <appender-ref ref="CONSOLE" value="${devLogLevel}"/>
            <appender-ref ref="fileLog" value="${devLogLevel}"/>
        </root>
    </springProfile>
    <!--  生产环境.  -->
    <springProfile name="pro,px,pr">
        <!-- 九维日志监控平台  -->
        <appender name="Sentry" class="com.getsentry.raven.logback.SentryAppender">
            <dsn>${sentrydsn}</dsn>
            <minLevel>WARN</minLevel>
            <tags>port:3344,appName:{projectName}Server-${config.profile}</tags>
            <messageRegex>#([\s\S]*?)#</messageRegex>
        </appender>
        <logger name="com.foresee.ftcsp" level="${proLogLevel}"/>
        <logger name="com.ibatis" level="${proLogLevel}"/>
        <logger name="java.sql" level="${proLogLevel}"/>
        <logger name="com.getsentry.raven" level="ERROR"/>
        <logger name="com.apache.ibatis" level="${proLogLevel}"/>
        <logger name="java.sql.Connection" level="${proLogLevel}"/>
        <logger name="java.sql.Statement" level="${proLogLevel}"/>
        <logger name="java.sql.PreparedStatement" level="${proLogLevel}"/>
        <!--  根logger的设置  -->
        <root>
            <level value="INFO"/>
            <!--
             logback建议只使用FATAL ,ERROR ,WARN
                            ,INFO ,DEBUG这五个级别。
            -->
            <appender-ref ref="fileLog" value="${proLogLevel}"/>
            <appender-ref ref="Sentry" value="${proLogLevel}"/>
            <appender-ref ref="wechatMsg" value="${proLogLevel}"/>
        </root>
    </springProfile>
</configuration>
